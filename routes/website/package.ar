import "server" as *
import "database" as *
import "url.ar" as url
import "bleach.ar" as bleach
import "shlex.ar" as shlex
import "render" as render
import "commaNumbers" as *

let package(req, res) = do
    let acc = account.getByToken(req.cookies.get_value("token", ""))
    let name = req.query.get_value("name")
    if (not name) do
        res.code = 404
        res.renderTemplate("404.html", {})
        return

    let version = req.query.get_value("version", "latest")
    let commandName = name
    if (version != "latest") commandName += "@"+version
    let command = shlex.join(["isotope", "install", commandName])
    let package = packages.get_value(name)
    if (package == null && version == "latest") do
        package = {versions:{}, order:{}, name:name}
    else if (package == null) do
        res.code = 404
        res.renderTemplate("404.html", {})
        return
    if ("order" not in package) do
        package.order = {}
        makeChange()
    if (version not in package.versions && version != "latest") do
        res.code = 404
        res.renderTemplate("404.html", {})
        return
    let versions = []
    let keys = package.versions.keys()
    keys.sort()
    keys.sort(true, (v) = package.order.get_value(v, 0))
    for (i from 0 to keys.length) do
        let versioni = keys[i]
        let URL = "/package?"+url.queryStr({name:name, version:versioni})
        let html = null
        if (versioni == version) html = "<a href='"+URL+"' class='selected'>"+bleach.clean(name+"@"+versioni)+"</a>"
        else html = "<a href='"+URL+"'>"+bleach.clean(name+"@"+versioni)+"</a>"
        if (versioni == "latest") versions.insert(0, html)
        else versions.append(html)
    let author = account.getById(package.get_value("owner")) || {username:"Unknown", id:""}
    res.renderTemplate("package.html", {name:name, description: package.get_value("description", ""), 'short-description': package.get_value("short-description", ""), 'downloads': commaSeperatedNumber(package.get_value("downloads", 0)), keywords:package.get_value("keywords", []).join(', '), repository:package.get_value("repository", "https://github.com/"), license: package.get_value("license", "Unspecified"), author: author.username, authorPage: '/author?'+url.queryStr({id:author.id}), version:version, versions:versions.join(""), command:command, commandComma:command.replace("'", "\\'")})
app.get("/package", package)